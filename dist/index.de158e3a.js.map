{"mappings":"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","sources":["src/main.js"],"sourcesContent":["//document.createElement(\"div\");\nconst div = dom.create(\"<div>newDiv</div>\");\nconsole.log(div);\n\ndom.after(test, div);\n\nconst div3 = dom.create('<div id = \"parent\"></div>');\ndom.wrap(test, div3); //用于新增爸爸\n\nconst nodes = dom.empty(window.empty); //删除后代\nconsole.log(nodes);\n\ndom.attr(test, \"title\", \"Hi,I'm Evelyn\"); //用于写属性,三个参数实现了写\nconst title = dom.attr(test, \"title\"); //用于读内容，两个参数实现了读，并把读到的值返回给变量title\nconsole.log(`title:${title}`);\n\ndom.text(test, \"你好，这是新的内容\");\ndom.text(test); //获取text\n\ndom.style(test, { border: \"1px solid red\", color: \"blue\" }); //第二个参数可能是对象也可能是字符串，是对象的话就是设置\nconsole.log(dom.style(test, \"border\")); //第二个参数是字符串，为获取值\ndom.style(test, \"border\", \"1px solid black\"); //若为三个参数，为设置style\n\ndom.class.add(test, \"red\"); //用于添加class\ndom.class.add(test, \"blue\");\ndom.class.remove(test, \"blue\"); //用于删除class\nconsole.log(dom.class.has(test, \"blue\"));\n\n//test.addEventListener('click') 之前添加时间监听\nconst fn = () => {\n  console.log(\"点击了\");\n};\ndom.on(test, \"click\", fn); //添加事件监听\ndom.off(test, \"click\", fn); //删除事件监听\n\nconst testDiv = dom.find(\"#test\")[0]; //默认是在document里面找\nconsole.log(testDiv);\nconst test2 = dom.find(\"#test2\")[0];\nconsole.log(dom.find(\".red \", test2)[0]); //第二个参数指定了找的范围\n\nconsole.log(dom.parent(test)); //用于获取父元素\n\nconst s2 = dom.find(\"#s2\")[0];\nconsole.log(dom.siblings(s2)); //用于获取兄弟姐妹元素\nconsole.log(dom.next(s2)); //用于获取弟弟\nconsole.log(dom.previous(s2)); //用于获取哥哥\n\nconst t = dom.find(\"#travel\")[0];\n//找到t的所有children，对其进行一个each操作，每一个用n占位，n的color为red\ndom.each(dom.children(t), (n) => dom.style(n, \"color\", \"red\")); //每一个子元素颜色都变成red\n\nconsole.log(dom.index(s2)); //用于获取排行老几\n"],"names":[],"version":3,"file":"index.de158e3a.js.map","sourceRoot":"/__parcel_source_root/"}